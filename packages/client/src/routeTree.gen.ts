/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as EditCarImport } from './routes/edit-car'
import { Route as AddCarImport } from './routes/add-car'
import { Route as IndexImport } from './routes/index'
import { Route as EditCarIdImport } from './routes/edit-car/$id'
import { Route as CarIdImport } from './routes/car/$id'

// Create/Update Routes

const EditCarRoute = EditCarImport.update({
  id: '/edit-car',
  path: '/edit-car',
  getParentRoute: () => rootRoute,
} as any)

const AddCarRoute = AddCarImport.update({
  id: '/add-car',
  path: '/add-car',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const EditCarIdRoute = EditCarIdImport.update({
  id: '/$id',
  path: '/$id',
  getParentRoute: () => EditCarRoute,
} as any)

const CarIdRoute = CarIdImport.update({
  id: '/car/$id',
  path: '/car/$id',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/add-car': {
      id: '/add-car'
      path: '/add-car'
      fullPath: '/add-car'
      preLoaderRoute: typeof AddCarImport
      parentRoute: typeof rootRoute
    }
    '/edit-car': {
      id: '/edit-car'
      path: '/edit-car'
      fullPath: '/edit-car'
      preLoaderRoute: typeof EditCarImport
      parentRoute: typeof rootRoute
    }
    '/car/$id': {
      id: '/car/$id'
      path: '/car/$id'
      fullPath: '/car/$id'
      preLoaderRoute: typeof CarIdImport
      parentRoute: typeof rootRoute
    }
    '/edit-car/$id': {
      id: '/edit-car/$id'
      path: '/$id'
      fullPath: '/edit-car/$id'
      preLoaderRoute: typeof EditCarIdImport
      parentRoute: typeof EditCarImport
    }
  }
}

// Create and export the route tree

interface EditCarRouteChildren {
  EditCarIdRoute: typeof EditCarIdRoute
}

const EditCarRouteChildren: EditCarRouteChildren = {
  EditCarIdRoute: EditCarIdRoute,
}

const EditCarRouteWithChildren =
  EditCarRoute._addFileChildren(EditCarRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/add-car': typeof AddCarRoute
  '/edit-car': typeof EditCarRouteWithChildren
  '/car/$id': typeof CarIdRoute
  '/edit-car/$id': typeof EditCarIdRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/add-car': typeof AddCarRoute
  '/edit-car': typeof EditCarRouteWithChildren
  '/car/$id': typeof CarIdRoute
  '/edit-car/$id': typeof EditCarIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/add-car': typeof AddCarRoute
  '/edit-car': typeof EditCarRouteWithChildren
  '/car/$id': typeof CarIdRoute
  '/edit-car/$id': typeof EditCarIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/add-car' | '/edit-car' | '/car/$id' | '/edit-car/$id'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/add-car' | '/edit-car' | '/car/$id' | '/edit-car/$id'
  id: '__root__' | '/' | '/add-car' | '/edit-car' | '/car/$id' | '/edit-car/$id'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AddCarRoute: typeof AddCarRoute
  EditCarRoute: typeof EditCarRouteWithChildren
  CarIdRoute: typeof CarIdRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AddCarRoute: AddCarRoute,
  EditCarRoute: EditCarRouteWithChildren,
  CarIdRoute: CarIdRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/add-car",
        "/edit-car",
        "/car/$id"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/add-car": {
      "filePath": "add-car.tsx"
    },
    "/edit-car": {
      "filePath": "edit-car.tsx",
      "children": [
        "/edit-car/$id"
      ]
    },
    "/car/$id": {
      "filePath": "car/$id.tsx"
    },
    "/edit-car/$id": {
      "filePath": "edit-car/$id.tsx",
      "parent": "/edit-car"
    }
  }
}
ROUTE_MANIFEST_END */
